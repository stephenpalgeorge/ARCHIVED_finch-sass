@use 'sass:map';
@use 'sass:list';
@use '../../config';

$finch-line-heights: (
  x-tight: map.get(config.$interval-scale, 400),
  tight: map.get(config.$interval-scale, 500),
  base: map.get(config.$interval-scale, 600),
  tall: map.get(config.$interval-scale, 700),
  x-tall: map.get(config.$interval-scale, 800),
);
$set-line-heights: () !default;
$heights: map.merge($finch-line-heights, $set-line-heights);

/// Getter function
/// @param $key one of the keys from the `$heights` map.
/// @return {Number | null} the `line-height` declaration that is associated with the given `$key`, or `null` if that `$key` is not found.
@function get-line-height($key) {
  // return the given value immediately if it is a reserved keyword for this property:
  $spec-values: (normal);
  @if list.index(config.$global-values, $key) or list.index($spec-values, $key) {
    @return $key;
  }
  // try and find the value in the map and either return it, or handle the error case below.
  $value: map.get($heights, $key);
  @if $value {
    @return $value;
  }

  @warn 'no line-height found for "#{$key}"';
  @return null;
}

@mixin line-height($key, $important: false) {
  @if $important { line-height: get-line-height($key) !important; }
  @else { line-height: get-line-height($key); }
}
